<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[JQUERY实现SELECT框三级联动]]></title>
      <url>/2017/12/19/JQUERY%E5%AE%9E%E7%8E%B0SELECT%E6%A1%86%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>最近做了一个外包项目，其中写了一个模块是select框国家-省-市的三级联动，其中操作用到了JQuery，数据文件是引入了JSON，没有进行后端交互。如果用到后端交互的话，每次change的函数改成ajax请求即可。因为项目代码的保密，没有写得特别清楚，但结构应该也比较清晰了。</p>
<a id="more"></a>
<h2 id="JSON格式"><a href="#JSON格式" class="headerlink" title="JSON格式"></a>JSON格式</h2><p>由于数据是用脚本分几个文档处理出来的，所以JSON文件的格式是形如以下形式，分为了国家-省.json，省-市.json，一般情况下整合在一起会比较合适，操作起来也比较方便。</p>
<pre><code class="JSON">[
{
    &quot;country&quot;:&quot;China&quot;,
    &quot;provinces&quot;:[
        &quot;Guangdong&quot;,
        &quot;Beijing&quot;,
        &quot;Shanghai&quot;
    ]
},
{...}
]
</code></pre>
<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><pre><code class="html">&lt;div class=&quot;select-list&quot;&gt;
    &lt;select name=&quot;country&quot;&gt;&lt;/select&gt;
    &lt;select name=&quot;provinces&quot;&gt;&lt;/select&gt;
    &lt;select name=&quot;cities&quot;&gt;&lt;/select&gt;
&lt;/div&gt;
</code></pre>
<h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><pre><code class="Javascript">var countrySel = $(&#39;select[name=country]&#39;);
var provincesSel = $(&#39;select[name=provinces]&#39;);
var citiesSel = $(&#39;select[name=cities]&#39;);

var changePro = function () {
    var optionData = &quot;&quot;;
    // 遍历JSON
    $.each(country2pro, function (idx, reg) {
        optionData += &quot;&lt;option value=&#39;&quot; + reg.country + &quot;&#39;&gt;&quot; + reg.country + &quot;&lt;/option&gt;&quot;;
    });
    countrySel.empty();
    countrySel.html(optionData);
    changePro();
};

var changePro = function () {
    var optionData = &quot;&quot;;
    var idx = countrySel.get(0).selectedIndex;
    country2pro[idx].provinces.sort();
    country2pro[idx].provinces.forEach(function (item) {
        optionData += &quot;&lt;option value=&#39;&quot;+item+&quot;&#39;&gt;&quot; + item + &quot;&lt;/option&gt;&quot;;
    });
    provincesSel.empty();
    provincesSel.html(optionData);
    changeCity();
};

var changeCity = function () {
    var optionData = &quot;&quot;;
    // 获取province值
    var province = provincesSel.val();
    $.each(prov2cities, function (idx, opt) {
       if (opt.province == province) {
           opt.cities.sort();
           opt.cities.forEach(function (item) {
               optionData += &quot;&lt;option value=&#39;&quot;+item+&quot;&#39;&gt;&quot; + item + &quot;&lt;/option&gt;&quot;;
           });
           return false;
       }
    });
    citiesSel.empty();
    citiesSel.html(optionData);
};

//文档加载时执行时事件
window.onload = function () {
    changeRegion();
}

//select框change事件
regionSel.change(function () {
    changePro();
});

countrySel.change(function () {
    changeCity();
});
</code></pre>
<h2 id="一些小知识点"><a href="#一些小知识点" class="headerlink" title="一些小知识点"></a>一些小知识点</h2><ul>
<li>$.each遍历JSON的时候通过return进行类似for循环的break和continue</li>
<li>select框change的时候必须要清除框内的值</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> JQUERY </tag>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Github Pages搭建]]></title>
      <url>/2017/12/16/Github%20Pages%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近正在重新系统地学习一遍Linux，自己也经常在有道里面做做笔记。如今拥抱开源、知识分享也是一种趋势，搭建一个博客写写自己学到的知识、整理一下笔记也是挺不错的。于是今晚用一个小时利用Github Pages配置搭建好了Yilia主题的博客，简单记录一下操作和一些坑，希望能给别人一些帮助。</p>
<a id="more"></a>
<h2 id="Github操作"><a href="#Github操作" class="headerlink" title="Github操作"></a>Github操作</h2><ul>
<li>创建仓库，仓库名为 githubname.github.io</li>
<li>在仓库Setttings#Github Pages-&gt;choose a theme，完成配置</li>
</ul>
<h2 id="HEXO操作"><a href="#HEXO操作" class="headerlink" title="HEXO操作"></a>HEXO操作</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul>
<li>install Node.js, git</li>
<li>git需要进行配置SSH，链接到你的github。使用<code>git config --list</code>查看是否已配置成功</li>
</ul>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul>
<li>进行hexo配置<pre><code>  npm install -g hexo-cli
  cd create_a_hexo_path
  hexo init
  npm install
  hexo server
</code></pre>  打开<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>看是否安装成功</li>
<li>打开hexo文件夹下的_config.yml，这就是hexo的相关配置。找到deploy进行修改<pre><code>  deploy: 
    type: git
    repo: git@github.com:MyGithub/MyGithub.github.io.git
    branch: master
  // warning:修改MyGithub为自己的账户名;在yml文件中，:后面必须要有空格
</code></pre></li>
</ul>
<h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><ul>
<li>在<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">各种themes</a>下载喜欢的主题到./themes下</li>
<li>需要更新主题时可以到主题文件夹下进行<code>git pull</code></li>
<li>在_config.yml 更改theme<pre><code>  # Extensions
  ## Plugins: http://hexo.io/plugins/
  ## Themes: http://hexo.io/themes/
  theme: next
</code></pre></li>
<li>本地运行验证是否可用<code>hexo s --debug</code></li>
</ul>
<h3 id="yilla配置"><a href="#yilla配置" class="headerlink" title="yilla配置"></a>yilla配置</h3><ul>
<li><a href="http://www.jianshu.com/p/f389ad8c49bd" target="_blank" rel="noopener">GithubPages+Hexo博客主题Yilia</a></li>
<li>此处建议大家挑选比较热门的主题，对应的帮助文档会比较详细规范。不同的主题配置方法大致相同，一般都是修改_config.yml文件，此处不再赘述具体的配置。</li>
</ul>
<h3 id="部署到github上"><a href="#部署到github上" class="headerlink" title="部署到github上"></a>部署到github上</h3><ul>
<li>每次部署都需要输入三个命令<pre><code class="bash">  hexo clean
  hexo generate   //hexo g
  hexo deploy     //hexo d
</code></pre>
</li>
<li>如果报错，则需要安装插件<code>npm install hexo-deployer-git</code></li>
</ul>
<h3 id="博客文章放置点"><a href="#博客文章放置点" class="headerlink" title="博客文章放置点"></a>博客文章放置点</h3><ul>
<li>在source文件夹下的_post文件夹下放置</li>
</ul>
<h2 id="注册域名与github-pages地址绑定"><a href="#注册域名与github-pages地址绑定" class="headerlink" title="注册域名与github pages地址绑定"></a>注册域名与github pages地址绑定</h2><ul>
<li>待填坑</li>
</ul>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><ul>
<li><a href="https://cczeng.github.io/2017/05/03/git/%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8Github-Pages%E6%90%AD%E5%BB%BA%E8%B5%B7%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E2%80%94%E2%80%94%E7%BB%86%E6%95%B0%E4%B8%80%E8%B7%AF%E7%9A%84%E5%9D%91/" target="_blank" rel="noopener">我是如何利用Github Pages搭建起我的博客，细数一路的坑客</a></li>
<li><a href="http://barrysite.me/2017/05/07/Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/" target="_blank" rel="noopener">Github+Hexo+NEXT主题+域名绑定 博客搭建全记录</a></li>
<li><a href="http://www.jianshu.com/p/465830080ea9" target="_blank" rel="noopener">HEXO+Github,搭建属于自己的博客
</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 博客搭建 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Github Pages </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[关于我]]></title>
      <url>/index.html</url>
      <content type="html"><![CDATA[<h2 id="我是谁"><a href="#我是谁" class="headerlink" title="我是谁"></a>我是谁</h2><ul>
<li>无名小卒。在安全的路上一步一个脚印……</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于我]]></title>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<h2 id="我是谁"><a href="#我是谁" class="headerlink" title="我是谁"></a>我是谁</h2><ul>
<li>热爱网络安全的无名小卒</li>
<li>CTF划水队员</li>
<li>python爱好者</li>
<li>偶尔玩玩前端，有一些前端的项目经历</li>
</ul>
<h2 id="Contact-Me"><a href="#Contact-Me" class="headerlink" title="Contact Me"></a>Contact Me</h2><ul>
<li>Mail: <a href="mailto://leezj9671@gmail.com" target="_blank" rel="noopener">GMail</a></li>
<li>QQ: R000REdPSlRHVVpUUU1aWUdNWVRHT0pUR1laVEk9PT0=</li>
<li>Location: 广东深圳</li>
</ul>
]]></content>
    </entry>
    
  
</search>
